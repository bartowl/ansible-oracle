- include_tasks: manage-db.yml
  with_items:
      - "{{ oracle_databases }}"
  loop_control:
    loop_var: dbh
  when: oracle_databases is defined and is_dataguard

- name: Create dgmgrl configuration when not existing (ORA-16532)
  shell: |
    #!/bin/bash
    source {{ oracle_home }}/.profile_{{ dbh.oracle_db_name }}
    set -eu
    cat <<EOF | dgmgrl
    connect $DGCONNECT;
    @"{{ oracle_base }}/admin/{{ dbh.oracle_db_unique_name }}/scripts/rman/dgmgrl.cfg"
    EOF
  environment:
      DGCONNECT: "sys/{{ dbpass_sys }}@{{ dbh.oracle_db_unique_name }}_dgmgrl"
  become_user: "{{ oracle_user }}"
  become: True
  with_items:
      - "{{ oracle_databases }}"
  loop_control:
    loop_var: dbh
  when: "is_dataguard and is_primary and 'ORA-16532' in dgmgrlresult.stdout"
  register: dgmgrlcreateresult

- name: show dgmgrl output
  debug: msg="{{ item.stdout_lines }}"
  loop: "{{ dgmgrlcreateresult.results }}"
  loop_control:
    label: "{{ item.dbh.oracle_db_name }}"
  when: dgmgrlcreateresult is defined and dgmgrlcreateresult.results is defined
  tags: dgmgrlstate